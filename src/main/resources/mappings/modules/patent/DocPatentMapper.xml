<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.abc.ssm.modules.patent.dao.DocPatentMapper">
    <resultMap id="BaseResultMap" type="team.abc.ssm.modules.patent.entity.DocPatent">
        <!--@mbg.generated-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="patent_name" jdbcType="VARCHAR" property="patentName"/>
        <result column="patent_type" jdbcType="VARCHAR" property="patentType"/>
        <result column="patent_type_value" jdbcType="VARCHAR" property="patentTypeValue"/>
        <result column="patent_right_person" jdbcType="VARCHAR" property="patentRightPerson"/>
        <result column="patent_number" jdbcType="VARCHAR" property="patentNumber"/>
        <result column="patent_authorization_date" jdbcType="TIMESTAMP" property="patentAuthorizationDate"/>
        <result column="patent_authorization_date_string" jdbcType="VARCHAR" property="patentAuthorizationDateString"/>
        <result column="institute" jdbcType="VARCHAR" property="institute"/>
        <result column="author_list" jdbcType="VARCHAR" property="authorList"/>
        <result column="first_author_name" jdbcType="VARCHAR" property="firstAuthorName"/>
        <result column="second_author_name" jdbcType="VARCHAR" property="secondAuthorName"/>
        <result column="first_author_id" jdbcType="VARCHAR" property="firstAuthorId"/>
        <result column="second_author_id" jdbcType="VARCHAR" property="secondAuthorId"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="modify_user_id" jdbcType="VARCHAR" property="modifyUserId"/>
        <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="status_1" jdbcType="VARCHAR" property="status1"/>
        <result column="status_2" jdbcType="VARCHAR" property="status2"/>
        <result column="del_flag" jdbcType="BOOLEAN" property="delFlag"/>
        <result column="first_author_type" jdbcType="VARCHAR" property="firstAuthorType"/>
        <result column="first_author_name" jdbcType="VARCHAR" property="firstAuthorName"/>
        <result column="second_author_type" jdbcType="VARCHAR" property="secondAuthorType"/>
        <result column="second_author_name" jdbcType="VARCHAR" property="secondAuthorName"/>
        <result column="first_author_work_id" jdbcType="VARCHAR" property="firstAuthorWorkId"/>
        <result column="second_author_work_id" jdbcType="VARCHAR" property="secondAuthorWorkId"/>
        <result column="patent_subject" jdbcType="VARCHAR" property="patentSubject"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, patent_name, patent_type, patent_right_person, patent_number, patent_authorization_date,
        patent_authorization_date_string, institute, author_list, first_author_name, second_author_name,
        first_author_id, second_author_id, remarks, create_user_id, create_date, modify_user_id,
        modify_date, `status`, status_1, status_2, del_flag,first_author_type,first_author_work_id,second_author_type,second_author_work_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from doc_patent
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from doc_patent
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        <!--@mbg.generated-->
        insert into doc_patent (id, patent_name, patent_type,
        patent_right_person, patent_number, patent_authorization_date,
        patent_authorization_date_string, institute,
        author_list, first_author_name, second_author_name,
        first_author_id, second_author_id, remarks,
        create_user_id, create_date, modify_user_id,
        modify_date, `status`, status_1,
        status_2, del_flag)
        values (#{id,jdbcType=VARCHAR}, #{patentName,jdbcType=VARCHAR}, #{patentType,jdbcType=VARCHAR},
        #{patentRightPerson,jdbcType=VARCHAR}, #{patentNumber,jdbcType=VARCHAR},
        #{patentAuthorizationDate,jdbcType=TIMESTAMP},
        #{patentAuthorizationDateString,jdbcType=VARCHAR}, #{institute,jdbcType=VARCHAR},
        #{authorList,jdbcType=VARCHAR}, #{firstAuthorName,jdbcType=VARCHAR}, #{secondAuthorName,jdbcType=VARCHAR},
        #{firstAuthorId,jdbcType=VARCHAR}, #{secondAuthorId,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
        #{createUserId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=VARCHAR},
        #{modifyDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{status1,jdbcType=VARCHAR},
        #{status2,jdbcType=VARCHAR}, #{delFlag,jdbcType=BOOLEAN})
    </insert>
    <insert id="insertSelective" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        <!--@mbg.generated-->
        insert into doc_patent
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="patentName != null">
                patent_name,
            </if>
            <if test="patentType != null">
                patent_type,
            </if>
            <if test="patentRightPerson != null">
                patent_right_person,
            </if>
            <if test="patentNumber != null">
                patent_number,
            </if>
            <if test="patentAuthorizationDate != null">
                patent_authorization_date,
            </if>
            <if test="patentAuthorizationDateString != null">
                patent_authorization_date_string,
            </if>
            <if test="institute != null">
                institute,
            </if>
            <if test="authorList != null">
                author_list,
            </if>
            <if test="firstAuthorName != null">
                first_author_name,
            </if>
            <if test="secondAuthorName != null">
                second_author_name,
            </if>
            <if test="firstAuthorId != null">
                first_author_id,
            </if>
            <if test="secondAuthorId != null">
                second_author_id,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyUserId != null">
                modify_user_id,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="status1 != null">
                status_1,
            </if>
            <if test="status2 != null">
                status_2,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="patentName != null">
                #{patentName,jdbcType=VARCHAR},
            </if>
            <if test="patentType != null">
                #{patentType,jdbcType=VARCHAR},
            </if>
            <if test="patentRightPerson != null">
                #{patentRightPerson,jdbcType=VARCHAR},
            </if>
            <if test="patentNumber != null">
                #{patentNumber,jdbcType=VARCHAR},
            </if>
            <if test="patentAuthorizationDate != null">
                #{patentAuthorizationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="patentAuthorizationDateString != null">
                #{patentAuthorizationDateString,jdbcType=VARCHAR},
            </if>
            <if test="institute != null">
                #{institute,jdbcType=VARCHAR},
            </if>
            <if test="authorList != null">
                #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUserId != null">
                #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                #{status2,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        <!--@mbg.generated-->
        update doc_patent
        <set>
            <if test="patentName != null">
                patent_name = #{patentName,jdbcType=VARCHAR},
            </if>
            <if test="patentType != null">
                patent_type = #{patentType,jdbcType=VARCHAR},
            </if>
            <if test="patentRightPerson != null">
                patent_right_person = #{patentRightPerson,jdbcType=VARCHAR},
            </if>
            <if test="patentNumber != null">
                patent_number = #{patentNumber,jdbcType=VARCHAR},
            </if>
            <if test="patentAuthorizationDate != null">
                patent_authorization_date = #{patentAuthorizationDate,jdbcType=TIMESTAMP},
            </if>
            <if test="patentAuthorizationDateString != null">
                patent_authorization_date_string = #{patentAuthorizationDateString,jdbcType=VARCHAR},
            </if>
            <if test="institute != null">
                institute = #{institute,jdbcType=VARCHAR},
            </if>
            <if test="authorList != null">
                author_list = #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorWorkId != null ">
                first_author_work_id = #{firstAuthorWorkId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorWorkId != null ">
                second_author_work_id = #{secondAuthorWorkId,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                status_1 = #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                status_2 = #{status2,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BOOLEAN},
            </if>
            <if test="firstAuthorType != null and firstAuthorType != ''">
                first_author_type = #{firstAuthorType,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorType != null and secondAuthorType != ''">
                second_author_type = #{secondAuthorType,jdbcType=VARCHAR}
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        <!--@mbg.generated-->
        update doc_patent
        set patent_name = #{patentName,jdbcType=VARCHAR},
        patent_type = #{patentType,jdbcType=VARCHAR},
        patent_right_person = #{patentRightPerson,jdbcType=VARCHAR},
        patent_number = #{patentNumber,jdbcType=VARCHAR},
        patent_authorization_date = #{patentAuthorizationDate,jdbcType=TIMESTAMP},
        patent_authorization_date_string = #{patentAuthorizationDateString,jdbcType=VARCHAR},
        institute = #{institute,jdbcType=VARCHAR},
        author_list = #{authorList,jdbcType=VARCHAR},
        first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
        second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
        first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
        second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
        first_author_work_id = #{firstAuthorWorkId,jdbcType=VARCHAR},
        second_author_work_id = #{secondAuthorWorkId,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=VARCHAR},
        create_user_id = #{createUserId,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
        `status` = #{status,jdbcType=VARCHAR},
        status_1 = #{status1,jdbcType=VARCHAR},
        status_2 = #{status2,jdbcType=VARCHAR},
        del_flag = #{delFlag,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectListByPage" parameterType="team.abc.ssm.modules.patent.entity.DocPatent"
            resultMap="BaseResultMap">
        select
        a.*,
        b.name_cn as patent_type_value,
        c.user_type as first_author_type,
        d.user_type as second_author_type,
        c.real_name as first_author_name,
        d.real_name as second_author_name
        from (
            select * from doc_patent
            <where>
                <if test="status != null and status != ''">
                    status = #{status}
                </if>
                <if test="page.searchKey != null and page.searchKey != ''">
                    and patent_name like concat('%',#{page.searchKey} ,'%')
                </if>
            </where>
            limit #{page.pageStart} ,#{page.pageSize}
        ) as a
        left join sys_dict b on b.id = a.patent_type
        left join sys_user c on c.id = a.first_author_id
        left join sys_user d on d.id = a.second_author_id
    </select>

    <select id="selectSearchCount" resultType="int">
        select count(*) from doc_patent
        <where>
            status = #{status}
            <if test="page.searchKey != null and page.searchKey != ''">
                and patent_name like concat('%',#{page.searchKey} ,'%')
            </if>
        </where>
    </select>

    <!--auto generated by MybatisCodeHelper on 2019-06-23-->
    <select id="selectAllByStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from doc_patent
        where `status`=#{status,jdbcType=VARCHAR}
    </select>

    <!--auto generated by MybatisCodeHelper on 2019-07-03-->
    <delete id="deleteByStatus">
        delete from  doc_patent
        where `status`=#{status,jdbcType=VARCHAR}
    </delete>

    <update id="setPatentAuthor">
        update doc_patent
        <trim prefix="set" prefixOverrides="and" suffixOverrides=",">
            <if test="authorIndex == 1">
                and first_author_id = #{authorId,jdbcType=VARCHAR} ,
            </if>
            <if test="authorIndex ==2">
                and second_author_id = #{authorId,jdbcType=VARCHAR} ,
            </if>
        </trim>
        <where>id = #{patentId,jdbcType=VARCHAR}</where>
    </update>

    <update id="convertToSuccessByIds" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        update doc_patent
        set status = '2'
        <choose>
            <when test="list != null and list.size() != 0">
                <where>
                    id in
                    <foreach collection="list" open="(" close=")" item="item" separator=",">
                        #{item.id}
                    </foreach>
                </where>
            </when>
            <otherwise>
                <where>
                    1 = 0
                </where>
            </otherwise>
        </choose>
    </update>

    <update id="convertToCompleteByIds" parameterType="team.abc.ssm.modules.patent.entity.DocPatent">
        update doc_patent
        set status = '4'
        <choose>
            <when test="list != null and list.size() != 0">
                <where>
                    id in
                    <foreach collection="list" open="(" close=")" item="item" separator=",">
                        #{item.id}
                    </foreach>
                </where>
            </when>
            <otherwise>
                <where>
                    1 = 0
                </where>
            </otherwise>
        </choose>
    </update>
    <select id="selectConvertToCompleteByIds" parameterType="team.abc.ssm.modules.patent.entity.DocPatent" resultMap="BaseResultMap">
        select * from doc_patent
        <choose>
            <when test="list != null and list.size() != 0">
                <where>
                    id in
                    <foreach collection="list" open="(" close=")" item="item" separator=",">
                        #{item.id}
                    </foreach>
                </where>
            </when>
            <otherwise>
                <where>
                    1 = 0
                </where>
            </otherwise>
        </choose>
    </select>


    <!--auto generated by MybatisCodeHelper on 2019-07-11-->
    <select id="selectByStatusAndPatentNumberAndDelFlag" resultType="int">
        select count(*)
        from doc_patent
        where `status`=#{status,jdbcType=VARCHAR} and patent_number=#{patentNumber,jdbcType=VARCHAR} and
        del_flag=#{delFlag,jdbcType=BOOLEAN}
    </select>
    <select id="selectStudentPatent" parameterType="team.abc.ssm.modules.author.entity.Author" resultType="int">
        select count(*)
        from doc_patent
        where first_author_work_id = #{workId,jdbcType=VARCHAR}
        or (
           second_author_work_id = #{workId,jdbcType=VARCHAR}
           and first_author_work_id = (
            #{tutorWorkId,jdbcType=VARCHAR}
           )
        )
    </select>
    <select id="selectTeacherPatent" parameterType="team.abc.ssm.modules.author.entity.Author" resultType="int">
        select count(*)
        from doc_patent a
        where first_author_work_id = #{workId,jdbcType=VARCHAR}
        or #{workId,jdbcType=VARCHAR}  =(
            select b.tutor_work_id
            from sys_user b
            where b.user_type = 'student'
            and b.work_id = a.first_author_work_id
        )
    </select>
    <select id="selectMyPatentNum" resultType="int" parameterType="java.lang.String">
         select count(*)
         from (
            select *
            from doc_patent
            where  status = '4'
         ) as t where t.first_author_work_id = #{userWorkId,jdbcType=VARCHAR}
         or t.second_author_work_id = #{userWorkId,jdbcType=VARCHAR}
    </select>

    <select id="selectMyPatentList" parameterType="team.abc.ssm.modules.patent.entity.DocPatent"
            resultMap="BaseResultMap">
        select
        a.*,
        b.user_type as first_author_type,
        c.user_type as second_author_type,
        b.real_name as first_author_name,
        c.real_name as second_author_name
        from (
            select * from (
                select * from docmanager.doc_patent
                where first_author_work_id = #{id,jdbcType=VARCHAR}
                or second_author_work_id = #{id,jdbcType=VARCHAR}
            ) as tmp
            <where>
                <if test="status != null and status != ''">
                    and status = #{status}
                </if>
                <if test="page.searchKey != null and page.searchKey != ''">
                    and patent_name like concat('%',#{page.searchKey} ,'%')
                </if>
            </where>
            limit #{page.pageStart} ,#{page.pageSize}
        ) as a
        left join sys_user b on b.work_id = a.first_author_work_id
        left join sys_user c on c.work_id = a.second_author_work_id
    </select>

    <select id="getStatisticNumOfPatent"
            parameterType="StatisticCondition"
            resultMap="BaseResultMap">
        select *
        from (
            select *
            from docmanager.doc_patent dp
            where dp.status = #{status,jdbcType=VARCHAR}
            <if test="patentType != null and patentType != ''">
                and dp.patent_type = #{patentType,jdbcType=VARCHAR}
            </if>
            <if test="institute != null and institute != ''">
                and dp.institute = #{institute,jdbcType=VARCHAR}
            </if>
            <if test="endDate != null">
                and dp.patent_authorization_date &gt;= #{startDate,jdbcType=TIMESTAMP}
                and dp.patent_authorization_date &lt;= #{endDate,jdbcType=TIMESTAMP}
            </if>
        ) as a
        <if test="subject != null and subject != ''">
            left join docmanager.sys_user b on b.work_id = a.first_author_work_id
        </if>
        <where>
            <if test="subject != null and subject != ''">
                b.major = #{subject,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectAllPatentType" resultType="java.lang.String">
        select distinct patent_type
        from docmanager.doc_patent
    </select>

    <select id="selectAllByPageWithStatisticCondition" resultMap="BaseResultMap" parameterType="StatisticCondition">
        select * from (
            select dp.*
            <if test="subject != null and subject != ''">
                ,b.major as patent_subject
            </if>
            from docmanager.doc_patent as dp
            <if test="subject != null and subject != ''">
                left join sys_user b on b.work_id = dp.first_author_work_id
            </if>
            <where>
                <if test="firstAuthorWorkId != null and firstAuthorWorkId != ''">
                    dp.first_author_work_id = #{firstAuthorWorkId,jdbcType=VARCHAR}
                </if>
                <if test="secondAuthorWorkId != null and secondAuthorWorkId != ''">
                    and dp.second_author_work_id = #{secondAuthorWorkId,jdbcType=VARCHAR}
                </if>
                <if test="patentName != null and patentName != ''">
                    and dp.patent_name like contact('%', #{patentName,jdbcType=VARCHAR}, '%')
                </if>
                <if test="patentNumber != null and patentNumber != ''">
                    and dp.patent_number = #{patentNumber,jdbcType=VARCHAR}
                </if>
                <if test="institute != null and institute != ''">
                    and dp.institute = #{institute,jdbcType=VARCHAR}
                </if>
                <if test="patentType != null and patentType != ''">
                    and dp.patent_type = #{patentType,jdbcType=VARCHAR}
                </if>
                <if test="startDate != null and endDate != null">
                    and dp.patent_authorization_date &gt;= #{startDate,jdbcType=TIMESTAMP}
                    and dp.patent_authorization_date &lt;= #{endDate,jdbcType=TIMESTAMP}
                </if>
                <if test="status != null and status != ''">
                    and dp.status = #{status,jdbcType=VARCHAR}
                </if>
            </where>
        )as res
        <if test="subject != null and subject != ''">
            where res.patent_subject = #{subject,jdbcType=VARCHAR}
        </if>
        <if test="page != null">
            limit #{page.pageStart} ,#{page.pageSize}
        </if>
    </select>
    <select id="selectNumWithStatisticCondition" resultType="int">
        select count(*) from (
            select dp.*
            <if test="subject != null and subject != ''">
                ,b.major as patent_subject
            </if>
            from docmanager.doc_patent as dp
            <if test="subject != null and subject != ''">
                left join sys_user b on b.work_id = dp.first_author_work_id
            </if>
            <where>
                <if test="firstAuthorWorkId != null and firstAuthorWorkId != ''">
                    dp.first_author_work_id = #{firstAuthorWorkId,jdbcType=VARCHAR}
                </if>
                <if test="secondAuthorWorkId != null and secondAuthorWorkId != ''">
                    and dp.second_author_work_id = #{secondAuthorWorkId,jdbcType=VARCHAR}
                </if>
                <if test="patentName != null and patentName != ''">
                    and dp.patent_name like contact('%', #{patentName,jdbcType=VARCHAR}, '%')
                </if>
                <if test="patentNumber != null and patentNumber != ''">
                    and dp.patent_number = #{patentNumber,jdbcType=VARCHAR}
                </if>
                <if test="patentType != null and patentType != ''">
                    and dp.patent_type = #{patentType,jdbcType=VARCHAR}
                </if>
                <if test="institute != null and institute != ''">
                    and dp.institute = #{institute,jdbcType=VARCHAR}
                </if>
                <if test="startDate != null and endDate != null">
                    and dp.patent_authorization_date &gt;= #{startDate,jdbcType=TIMESTAMP}
                    and dp.patent_authorization_date &lt;= #{endDate,jdbcType=TIMESTAMP}
                </if>
                <if test="status != null and status != ''">
                    and dp.status = #{status,jdbcType=VARCHAR}
                </if>
            </where>
        )as res
        <if test="subject != null and subject != ''">
            where res.patent_subject = #{subject,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>