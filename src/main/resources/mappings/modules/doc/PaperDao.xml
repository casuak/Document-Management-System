<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.abc.ssm.modules.doc.dao.PaperDao">
    <resultMap id="BaseResultMap" type="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="author_list" jdbcType="VARCHAR" property="authorList"/>
        <result column="first_author_name" jdbcType="VARCHAR" property="firstAuthorName"/>
        <result column="second_author_name" jdbcType="VARCHAR" property="secondAuthorName"/>
        <result column="first_author_id" jdbcType="VARCHAR" property="firstAuthorId"/>
        <result column="second_author_id" jdbcType="VARCHAR" property="secondAuthorId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="status_1" jdbcType="VARCHAR" property="status1"/>
        <result column="status_2" jdbcType="VARCHAR" property="status2"/>
        <result column="paper_name" jdbcType="VARCHAR" property="paperName"/>
        <result column="store_num" jdbcType="VARCHAR" property="storeNum"/>
        <result column="doc_type" jdbcType="VARCHAR" property="docType"/>
        <result column="doc_type_value" property="docTypeValue"/>
        <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate"/>
        <result column="ISSN" jdbcType="VARCHAR" property="ISSN"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
        <result column="modify_user_id" jdbcType="VARCHAR" property="modifyUserId"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate"/>
        <result column="del_flag" jdbcType="BOOLEAN" property="delFlag"/>
        <result column="_PD" property="_PD"/>
        <result column="_PY" property="_PY"/>
        <result column="danwei" property="danwei"/>
        <result column="danwei_cn" property="danweiCN"/>
        <result column="impact_factor" property="impactFactor"/>
        <result column="journal_division" property="journalDivision"/>

        <association property="firstAuthor" javaType="user">
            <id column="first_author_id" property="id"/>
            <result column="user_type_1" property="userType"/>
            <result column="real_name_1" property="realName"/>
        </association>

        <association property="secondAuthor" javaType="user">
            <id column="second_author_id" property="id"/>
            <result column="user_type_2" property="userType"/>
            <result column="real_name_2" property="realName"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, author_list, first_author_name, second_author_name, first_author_id, second_author_id,
        `status`, status_1, status_2, paper_name, store_num, doc_type, publish_date, ISSN,
        remarks, create_user_id, modify_user_id, create_date, modify_date, del_flag
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from doc_paper
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from doc_paper
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into doc_paper (id, author_list, first_author_name,
        second_author_name, first_author_id, second_author_id,
        `status`, status_1, status_2,
        paper_name, store_num, doc_type,
        publish_date, ISSN, remarks,
        create_user_id, modify_user_id, create_date,
        modify_date, del_flag)
        values (#{id,jdbcType=VARCHAR}, #{authorList,jdbcType=VARCHAR}, #{firstAuthorName,jdbcType=VARCHAR},
        #{secondAuthorName,jdbcType=VARCHAR}, #{firstAuthorId,jdbcType=VARCHAR}, #{secondAuthorId,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR}, #{status1,jdbcType=VARCHAR}, #{status2,jdbcType=VARCHAR},
        #{paperName,jdbcType=VARCHAR}, #{storeNum,jdbcType=VARCHAR}, #{docType,jdbcType=VARCHAR},
        #{publishDate,jdbcType=TIMESTAMP}, #{ISSN,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
        #{createUserId,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
        #{modifyDate,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=BOOLEAN})
    </insert>
    <insert id="insertSelective" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into doc_paper
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="authorList != null">
                author_list,
            </if>
            <if test="firstAuthorName != null">
                first_author_name,
            </if>
            <if test="secondAuthorName != null">
                second_author_name,
            </if>
            <if test="firstAuthorId != null">
                first_author_id,
            </if>
            <if test="secondAuthorId != null">
                second_author_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="status1 != null">
                status_1,
            </if>
            <if test="status2 != null">
                status_2,
            </if>
            <if test="paperName != null">
                paper_name,
            </if>
            <if test="storeNum != null">
                store_num,
            </if>
            <if test="docType != null">
                doc_type,
            </if>
            <if test="publishDate != null">
                publish_date,
            </if>
            <if test="ISSN != null">
                ISSN,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="modifyUserId != null">
                modify_user_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="authorList != null">
                #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                #{status2,jdbcType=VARCHAR},
            </if>
            <if test="paperName != null">
                #{paperName,jdbcType=VARCHAR},
            </if>
            <if test="storeNum != null">
                #{storeNum,jdbcType=VARCHAR},
            </if>
            <if test="docType != null">
                #{docType,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="ISSN != null">
                #{ISSN,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserId != null">
                #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update doc_paper
        <set>
            <if test="authorList != null">
                author_list = #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                status_1 = #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                status_2 = #{status2,jdbcType=VARCHAR},
            </if>
            <if test="paperName != null">
                paper_name = #{paperName,jdbcType=VARCHAR},
            </if>
            <if test="storeNum != null">
                store_num = #{storeNum,jdbcType=VARCHAR},
            </if>
            <if test="docType != null">
                doc_type = #{docType,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="ISSN != null">
                ISSN = #{ISSN,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update doc_paper
        set author_list = #{authorList,jdbcType=VARCHAR},
        first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
        second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
        first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
        second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=VARCHAR},
        status_1 = #{status1,jdbcType=VARCHAR},
        status_2 = #{status2,jdbcType=VARCHAR},
        paper_name = #{paperName,jdbcType=VARCHAR},
        store_num = #{storeNum,jdbcType=VARCHAR},
        doc_type = #{docType,jdbcType=VARCHAR},
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
        ISSN = #{ISSN,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=VARCHAR},
        create_user_id = #{createUserId,jdbcType=VARCHAR},
        modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
        del_flag = #{delFlag,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update doc_paper
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="author_list = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.authorList,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="first_author_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.firstAuthorName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="second_author_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.secondAuthorName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="first_author_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.firstAuthorId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="second_author_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.secondAuthorId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="status_1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.status1,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="status_2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.status2,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="paper_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.paperName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="store_num = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.storeNum,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="doc_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.docType,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="publish_date = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.publishDate,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="ISSN = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.ISSN,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="danwei_cn = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.danweiCN,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="remarks = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.remarks,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.createUserId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="modify_user_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyUserId,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_date = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.createDate,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="modify_date = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.modifyDate,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="del_flag = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.delFlag,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="impact_factor = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.impactFactor,jdbcType=DOUBLE}
                </foreach>
            </trim>
            <trim prefix="journal_division = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=VARCHAR} then #{item.journalDivision,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into doc_paper
        (id, author_list, first_author_name, second_author_name, first_author_id, second_author_id,
        `status`, status_1, status_2, paper_name, store_num, doc_type, publish_date, ISSN,
        remarks, create_user_id, modify_user_id, create_date, modify_date, del_flag)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.authorList,jdbcType=VARCHAR}, #{item.firstAuthorName,jdbcType=VARCHAR},
            #{item.secondAuthorName,jdbcType=VARCHAR}, #{item.firstAuthorId,jdbcType=VARCHAR},
            #{item.secondAuthorId,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.status1,jdbcType=VARCHAR},
            #{item.status2,jdbcType=VARCHAR}, #{item.paperName,jdbcType=VARCHAR}, #{item.storeNum,jdbcType=VARCHAR},
            #{item.docType,jdbcType=VARCHAR}, #{item.publishDate,jdbcType=TIMESTAMP},
            #{item.ISSN,jdbcType=VARCHAR},
            #{item.remarks,jdbcType=VARCHAR}, #{item.createUserId,jdbcType=VARCHAR},
            #{item.modifyUserId,jdbcType=VARCHAR},
            #{item.createDate,jdbcType=TIMESTAMP}, #{item.modifyDate,jdbcType=TIMESTAMP},
            #{item.delFlag,jdbcType=BOOLEAN}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into doc_paper
        (id, author_list, first_author_name, second_author_name, first_author_id, second_author_id,
        `status`, status_1, status_2, paper_name, store_num, doc_type, publish_date, ISSN,
        remarks, create_user_id, modify_user_id, create_date, modify_date, del_flag)
        values
        (#{id,jdbcType=VARCHAR}, #{authorList,jdbcType=VARCHAR}, #{firstAuthorName,jdbcType=VARCHAR},
        #{secondAuthorName,jdbcType=VARCHAR}, #{firstAuthorId,jdbcType=VARCHAR}, #{secondAuthorId,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR}, #{status1,jdbcType=VARCHAR}, #{status2,jdbcType=VARCHAR},
        #{paperName,jdbcType=VARCHAR}, #{storeNum,jdbcType=VARCHAR}, #{docType,jdbcType=VARCHAR},
        #{publishDate,jdbcType=TIMESTAMP}, #{ISSN,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
        #{createUserId,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
        #{modifyDate,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=BOOLEAN})
        on duplicate key update
        id = #{id,jdbcType=VARCHAR},
        author_list = #{authorList,jdbcType=VARCHAR},
        first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
        second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
        first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
        second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=VARCHAR},
        status_1 = #{status1,jdbcType=VARCHAR},
        status_2 = #{status2,jdbcType=VARCHAR},
        paper_name = #{paperName,jdbcType=VARCHAR},
        store_num = #{storeNum,jdbcType=VARCHAR},
        doc_type = #{docType,jdbcType=VARCHAR},
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
        ISSN = #{ISSN,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=VARCHAR},
        create_user_id = #{createUserId,jdbcType=VARCHAR},
        modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
        del_flag = #{delFlag,jdbcType=BOOLEAN}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="team.abc.ssm.modules.doc.entity.Paper">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into doc_paper
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="authorList != null">
                author_list,
            </if>
            <if test="firstAuthorName != null">
                first_author_name,
            </if>
            <if test="secondAuthorName != null">
                second_author_name,
            </if>
            <if test="firstAuthorId != null">
                first_author_id,
            </if>
            <if test="secondAuthorId != null">
                second_author_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="status1 != null">
                status_1,
            </if>
            <if test="status2 != null">
                status_2,
            </if>
            <if test="paperName != null">
                paper_name,
            </if>
            <if test="storeNum != null">
                store_num,
            </if>
            <if test="docType != null">
                doc_type,
            </if>
            <if test="publishDate != null">
                publish_date,
            </if>
            <if test="ISSN != null">
                ISSN,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="modifyUserId != null">
                modify_user_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="modifyDate != null">
                modify_date,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="authorList != null">
                #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                #{status2,jdbcType=VARCHAR},
            </if>
            <if test="paperName != null">
                #{paperName,jdbcType=VARCHAR},
            </if>
            <if test="storeNum != null">
                #{storeNum,jdbcType=VARCHAR},
            </if>
            <if test="docType != null">
                #{docType,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="ISSN != null">
                #{ISSN,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserId != null">
                #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BOOLEAN},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=VARCHAR},
            </if>
            <if test="authorList != null">
                author_list = #{authorList,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorName != null">
                first_author_name = #{firstAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorName != null">
                second_author_name = #{secondAuthorName,jdbcType=VARCHAR},
            </if>
            <if test="firstAuthorId != null">
                first_author_id = #{firstAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="secondAuthorId != null">
                second_author_id = #{secondAuthorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="status1 != null">
                status_1 = #{status1,jdbcType=VARCHAR},
            </if>
            <if test="status2 != null">
                status_2 = #{status2,jdbcType=VARCHAR},
            </if>
            <if test="paperName != null">
                paper_name = #{paperName,jdbcType=VARCHAR},
            </if>
            <if test="storeNum != null">
                store_num = #{storeNum,jdbcType=VARCHAR},
            </if>
            <if test="docType != null">
                doc_type = #{docType,jdbcType=VARCHAR},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="ISSN != null">
                ISSN = #{ISSN,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>

    <select id="selectIdsByPage" parameterType="paper" resultMap="BaseResultMap">
        select a.id
        from doc_paper a
        <where>
            a.status = #{status}
            <if test="page.searchKey != null and page.searchKey != ''">
                and a.paper_name like concat('%', #{page.searchKey}, '%')
            </if>
        </where>
        limit #{page.pageStart}, #{page.pageSize}
    </select>

    <select id="selectListByIds" parameterType="paper" resultMap="BaseResultMap">
        select
        a.*,
        a.`_PY` as `_PY`,
        a.`_PD` as `_PD`,
        b.name_en as doc_type_value,
        c.user_type as user_type_1,
        d.user_type as user_type_2,
        c.real_name as real_name_1,
        d.real_name as real_name_2
        from
        (select * from doc_paper
        <where>
            status = #{status}
            <if test="page.searchKey != null and page.searchKey != ''">
                and paper_name like concat('%', #{page.searchKey}, '%')
            </if>
        </where>
        limit #{page.pageStart}, #{page.pageSize})
        as a
        left join sys_dict b on b.id = a.doc_type
        left join sys_user c on c.work_id = a.first_author_id
        left join sys_user d on d.work_id = a.second_author_id
    </select>

    <select id="selectSearchCount" parameterType="paper" resultType="int">
        select count(*)
        from doc_paper a
        <where>
            a.status = #{status}
            <if test="page.searchKey != null and page.searchKey != ''">
                and a.paper_name like concat('%', #{page.searchKey}, '%')
            </if>
        </where>
    </select>

    <select id="selectListByStatus" parameterType="paper" resultMap="BaseResultMap">
        select * from doc_paper a
        <where>
            a.status = #{status}
        </where>
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select * from doc_paper
    </select>

    <delete id="deleteListByIds" parameterType="paper">
        delete from doc_paper
        <choose>
            <when test="list != null and list.size() != 0">
                <where>
                    id in
                    <foreach collection="list" open="(" close=")" item="item" separator=",">
                        #{item.id}
                    </foreach>
                </where>
            </when>
            <otherwise>
                <where>
                    1 = 0
                </where>
            </otherwise>
        </choose>
    </delete>

    <delete id="convertToSuccessByIds" parameterType="paper">
        update doc_paper set status = '2'
        <choose>
            <when test="list != null and list.size() != 0">
                <where>
                    id in
                    <foreach collection="list" open="(" close=")" item="item" separator=",">
                        #{item.id}
                    </foreach>
                </where>
            </when>
            <otherwise>
                <where>
                    1 = 0
                </where>
            </otherwise>
        </choose>
    </delete>

    <delete id="deleteByStatus" parameterType="string">
        delete
        from doc_paper
        where status = #{0}
    </delete>

    <update id="selectAuthor">
        update doc_paper set
        <trim prefixOverrides="and">
            <if test="authorIndex == 1">
                first_author_id = #{authorWorkId}
            </if>
            <if test="authorIndex == 2">
                and second_author_id = #{authorWorkId}
            </if>
        </trim>
        where id = #{paperId}
    </update>

    <update id="completeAll">
        update doc_paper set
        <trim prefixOverrides="and">
            status = '3'
        </trim>
        where status = '2'
    </update>
    <select id="countByFirstAuthorIdAndStatus" resultType="int">
        select count(*)
        from docmanager.doc_paper
        where first_author_id = #{firstAuthorId,jdbcType=VARCHAR}
        and status = '2'
    </select>
    <select id="selectStudentPaper" parameterType="team.abc.ssm.modules.author.entity.Author" resultType="int">
        select count(*)
        from doc_paper
        where first_author_id = #{workId,jdbcType=VARCHAR}
        or (
           second_author_id = #{workId,jdbcType=VARCHAR}
           and first_author_id = (
            #{tutorWorkId,jdbcType=VARCHAR}
           )
        )
    </select>
    <select id="selectTeacherPaper" parameterType="team.abc.ssm.modules.author.entity.Author" resultType="int">
        select count(*)
        from doc_paper a
        where first_author_id = #{workId,jdbcType=VARCHAR}
        or #{workId,jdbcType=VARCHAR}  =(
            select b.tutor_work_id
            from sys_user b
            where b.user_type = 'student'
            and b.work_id = a.first_author_id
        )
    </select>
</mapper>