<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.abc.ssm.modules.sys.dao.UserDao">

    <resultMap id="userBean" type="team.abc.ssm.modules.sys.entity.User">
        <id column="id" property="id"/>
        <result column="user_type" property="userType"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="real_name" property="realName"/>
        <result column="nicknames" property="nicknames"/>
        <result column="work_id" property="workId"/>
        <result column="sex_id" property="sexId"/>
        <result column="political_status" property="politicalStatus"/>
        <result column="hire_date" property="hireDate"/>
        <result column="id_number" property="idNumber"/>
        <result column="remarks" property="remarks"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="modify_user_id" property="modifyUserId"/>
        <result column="create_date" property="createDate"/>
        <result column="modify_date" property="modifyDate"/>
        <result column="del_flag" property="delFlag"/>

        <result column="tutor_work_id" property="tutorWorkId"/>
        <result column="tutor_type" property="tutorType"/>
        <result column="tutor_name" property="tutorName"/>
        <result column="tutor_nicknames" property="tutorNicknames"/>

        <result column="school" property="school"/>
        <result column="major" property="major"/>
        <result column="student_train_level" property="studentTrainLevel"/>
        <result column="student_degree_type" property="studentDegreeType"/>
        <result column="status" property="status"/>

        <association property="tutor" javaType="user">
            <id column="tutor_work_id" property="workId"/>
            <result column="tutor_real_name" property="realName"/>
            <result column="tutor_nicknames" property="nicknames"/>
        </association>
        <!-- 用户相关的角色列表 -->
        <collection property="roleList" ofType="team.abc.ssm.modules.sys.entity.Role">
            <id column="roleId" property="id"/>
            <result column="roleName" property="name"/>
            <result column="roleCode" property="code"/>
        </collection>
    </resultMap>

    <!-- 通过用户名获取用户信息 -->
    <select id="selectByUsername" parameterType="team.abc.ssm.modules.sys.entity.User" resultMap="userBean">
        select a.*,
               c.id   as roleId,
               c.name as roleName,
               c.code as roleCode
        from sys_user a
                 left join sys_map_user_role b on a.id = b.user_id
                 left join sys_role c on b.role_id = c.id
        where a.username = #{username}
        limit 1
    </select>

    <!-- 获取所有用户列表 -->
    <select id="selectAll" resultMap="userBean">
        select a.*,
               c.id   as roleId,
               c.name as roleName,
               c.code as roleCode
        from sys_user a
                 left join sys_map_user_role b on a.id = b.user_id
                 left join sys_role c on b.role_id = c.id
    </select>

    <!-- 获取指定状态的所有用户 -->
    <select id="selectByStatus" resultMap="userBean">
        select a.*
        from sys_user a
        where a.status = #{status}
    </select>

    <select id="selectAll2" resultType="user">
        select work_id             as workId,
               nicknames,
               user_type           as userType,
               tutor_work_id       as tutorWorkId,
               school,
               hire_date           as hireDate,
               student_train_level as studentTrainLevel,
               real_name           as realName,
               tutor_nicknames     as tutorNicknames
        from sys_user
    </select>

    <!-- 分页 + 搜索(模糊匹配用户名)获取用户id列表 -->
    <select id="selectByPage" parameterType="team.abc.ssm.modules.sys.entity.User" resultMap="userBean">
        select
        a.id
        from sys_user a
        <where>
            <if test="page.searchKey != '' and page.searchKey != null">
                a.username like concat('%', #{page.searchKey}, '%')
            </if>
            <if test="userType != null and userType != ''">
                <if test="userType == 'other'">
                    and (a.user_type is null or a.user_type = '')
                </if>
                <if test="userType != 'other'">
                    and a.user_type = #{userType}
                </if>
            </if>
        </where>
        limit #{page.pageStart}, #{page.pageSize}
    </select>

    <!-- 可选条件：分页、别名模糊搜索、用户类型筛选 -->
    <select id="selectListByPage2" parameterType="user" resultMap="userBean">
        select
        a.*,
        b.real_name as tutor_real_name,
        b.nicknames as tutor_nicknames
        from
        (select * from sys_user
        <where>
            <if test="page != null and page != '' and page.searchKey != null and page.searchKey != ''">
                nicknames like concat('%', #{page.searchKey}, '%')
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="school != null and school != ''">
                and school = #{school}
            </if>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
        </where>
        order by real_name, school
        <if test="page != null and page != ''">
            limit #{page.pageStart}, #{page.pageSize}
        </if>
        ) as a
        left join sys_user b on b.work_id = a.tutor_work_id
    </select>
    <!-- 与上面的方法配合使用 -->
    <select id="selectSearchCount2" parameterType="user" resultType="int">
        select count(*) from sys_user a
        <where>
            <if test="page != null and page != '' and page.searchKey != null and page.searchKey != ''">
                nicknames like concat('%', #{page.searchKey}, '%')
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="school != null and school != ''">
                and school = #{school}
            </if>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
        </where>
    </select>

    <!-- 根据ids获取用户列表（有角色信息） -->
    <select id="selectByIds" parameterType="team.abc.ssm.modules.sys.entity.User" resultMap="userBean">
        select
        a.*,
        c.id as roleId,
        c.name as roleName,
        c.code as roleCode
        from sys_user a
        left join sys_map_user_role b on a.id = b.user_id
        left join sys_role c on b.role_id = c.id
        where a.id in
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item.id}
        </foreach>
    </select>

    <!-- 模糊搜索结果总数 -->
    <select id="selectSearchCount" parameterType="team.abc.ssm.modules.sys.entity.User" resultType="int">
        select
        count(*)
        from sys_user a
        <where>
            <if test="page.searchKey != '' and page.searchKey != null">
                and a.username like concat('%', #{page.searchKey}, '%')
            </if>
            <if test="userType != null and userType != ''">
                <if test="userType == 'other'">
                    and (a.user_type is null or a.user_type = '')
                </if>
                <if test="userType != 'other'">
                    and a.user_type = #{userType}
                </if>
            </if>
        </where>
    </select>

    <!-- 添加一名新用户 -->
    <insert id="insert" parameterType="team.abc.ssm.modules.sys.entity.User">
        insert into sys_user (username,
                              `password`,
                              id,
                              remarks,
                              create_user_id,
                              modify_user_id,
                              create_date,
                              modify_date,
                              del_flag)
        values (#{username},
                #{password},
                #{id},
                #{remarks},
                #{createUserId},
                #{modifyUserId},
                #{createDate},
                #{modifyDate},
                #{delFlag})
    </insert>

    <!-- 更新指定id用户的信息 -->
    <update id="update" parameterType="team.abc.ssm.modules.sys.entity.User">
        update sys_user
        set `password` = #{password}
        where id = #{id}
    </update>

    <update id="updateList" parameterType="java.util.List">
        update sys_user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="nicknames = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.nicknames}
                </foreach>
            </trim>
            <trim prefix="tutor_nicknames = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.tutorNicknames}
                </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id} then #{item.status}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>

    <!-- 删除指定id的用户 -->
    <delete id="deleteByIds" parameterType="team.abc.ssm.modules.sys.entity.User">
        delete from sys_user where id in
        <foreach collection="list" index="index" item="item"
                 open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <select id="selectUserListByPage" parameterType="user" resultMap="userBean">
        select
        a.*,
        b.real_name as tutor_name,
        b.nicknames as tutor_nicknames
        from
        (select * from sys_user
        <where>
            <if test="page != null and page != '' and page.searchKey != null and page.searchKey != ''">
                real_name = #{page.searchKey}
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="school != null and school != ''">
                and school = #{school}
            </if>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
        </where>
        order by real_name, school
        <if test="page != null and page != ''">
            limit #{page.pageStart}, #{page.pageSize}
        </if>
        ) as a
        left join sys_user b on b.work_id = a.tutor_work_id
    </select>
    <!-- 与上面的方法配合使用 -->
    <select id="selectUserSearchCount" parameterType="user" resultType="int">
        select count(*) from sys_user a
        <where>
            <if test="page != null and page != '' and page.searchKey != null and page.searchKey != ''">
                real_name like concat('%', #{page.searchKey}, '%')
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="school != null and school != ''">
                and school = #{school}
            </if>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
        </where>
    </select>
</mapper>